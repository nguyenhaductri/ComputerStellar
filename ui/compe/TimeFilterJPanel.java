/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package poly.cafe.ui.compe;

import java.util.Date;
import java.util.function.BiConsumer;

import poly.cafe.util.TimeRange;
import poly.cafe.util.XDate;

/**
 *
 * @author DELL
 */
public class TimeFilterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TimeFilterJPanel
     */
    public TimeFilterJPanel() {
        initComponents();
        this.timeRangeSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBegin = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtEnd = new javax.swing.JTextField();
        btnFilter = new javax.swing.JButton();
        cboTimeRanges = new javax.swing.JComboBox<>();

        jLabel1.setText("Từ ngày: ");
        add(jLabel1);

        txtBegin.setColumns(8);
        add(txtBegin);

        jLabel2.setText("Đến ngày: ");
        add(jLabel2);

        txtEnd.setColumns(8);
        add(txtEnd);

        btnFilter.setText("Lọc");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });
        add(btnFilter);

        cboTimeRanges.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hôm nay", "Tuần này", "Tháng này", "Quý này", "Năm nay" }));
        cboTimeRanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimeRangesActionPerformed(evt);
            }
        });
        add(cboTimeRanges);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        // TODO add your handling code here:
        if (timeChanged != null) {
            timeChanged.accept(getFrom(), getTo());
        }
    }//GEN-LAST:event_btnFilterActionPerformed

    private void cboTimeRangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimeRangesActionPerformed
        // TODO add your handling code here:
        this.timeRangeSelected();
        if (timeChanged != null) {
            timeChanged.accept(getFrom(), getTo());
        }
    }//GEN-LAST:event_cboTimeRangesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilter;
    private javax.swing.JComboBox<String> cboTimeRanges;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtBegin;
    private javax.swing.JTextField txtEnd;
    // End of variables declaration//GEN-END:variables

    
    BiConsumer<Date, Date> timeChanged;

    public void setTimeChanged(BiConsumer<Date, Date> timeChanged) {
        this.timeChanged = timeChanged;
    }
    
    
    String pattern = "MM/dd/yyyy";

    public String getPattern() {
        return pattern;
    }

    public void setPattern(String pattern) {
        this.pattern = pattern;
    }
        
    public Date getFrom() {
        return XDate.parse(txtBegin.getText(), pattern);
    }

    public void setFrom(Date from) {
        txtBegin.setText(XDate.format(from, pattern));
    }

    public Date getTo() {
        return XDate.parse(txtEnd.getText(), pattern);
    }

    public void setTo(Date to) {
        txtEnd.setText(XDate.format(to, pattern));
    }

    private void timeRangeSelected() {
        TimeRange range = TimeRange.today();
        switch (cboTimeRanges.getSelectedIndex()) {
            case 0 -> { // today
                range = TimeRange.today();
            }
            case 1 -> { // this week
                range = TimeRange.thisWeek();
            }
            case 2 -> { // this month
                range = TimeRange.thisMonth();
            }
            case 3 -> { // this quarter
                range = TimeRange.thisQuarter();
            }
            case 4 -> { // this year
                range = TimeRange.thisYear();
            }
        }
        this.setFrom(range.getBegin());
        this.setTo(range.getEnd());
    }
}
